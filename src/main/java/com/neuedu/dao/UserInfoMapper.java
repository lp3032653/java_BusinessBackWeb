package com.neuedu.dao;

import com.neuedu.pojo.UserInfo;
import com.sun.org.glassfish.gmbal.ParameterNames;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    UserInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    List<UserInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(UserInfo record);

    int updateBySelectedActive(UserInfo userInfo);

    /**
     * 检查用户名
     * */
    int checkUsername(String username);

    /**
     * 根据用户名和密码查询
     * @Param("username")这个参数中的value值，是根据定义的key来获取username的值，所以写成 username
     * */
    UserInfo selectLogin(@Param("username") String username,@Param("password") String password);

    /**
     * 检查邮箱
     * */
    int checkEmail(String email);

    /**
     * 根据用户名查询密保问题
     * */
    String selectQuestionByUsername(String username);

    /**
     * 校验用户密保答案
     * */
    int  check_forget_answer(@Param("username") String username,@Param("question") String question,@Param("answer") String answer);

    /**
     * 根据用户名修改密码
     * */
    int  updatePasswordByUsername(@Param("username") String username,@Param("password") String newPassword);

    /**
     * 根据userid和passworldOld查询
     * */
    int  selectCountByUserIdAndPassowrd(@Param("userid") int userid,@Param("password") String  password);

    /**
     * 校验邮箱
     * */
    int  checkEmailByUseridAndEamil(@Param("userid") int userid,@Param("emailNew")String email);




}